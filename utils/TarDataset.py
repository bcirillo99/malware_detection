from torch.utils.data import Dataset
import numpy as np
import tarfile


class TarDataset(Dataset):

    def __init__(self, path_tar, member_list, first_n_byte=2000000, transform=None, padding=False, padding_value=256):
        self.path_tar=path_tar
        self.member_list = member_list
        self.first_n_byte = first_n_byte
        self.transform=transform
        self.padding=padding
        self.padding_value=padding_value

    
    def __len__(self):
        return len(self.member_list)

    def __getitem__(self, idx):
        with tarfile.open(self.path_tar,'r') as tar:
            file_extracted = tar.extractfile(self.member_list[idx][0])
            tmp = list(file_extracted.read(self.first_n_byte))
            tar.close()
            if(self.padding==True):
                tmp = tmp+[self.padding_value]*(self.first_n_byte-len(tmp))
            if(self.transform!=None):
                tmp=self.transform(tmp)
            
        return np.array(tmp),np.array(np.float32([self.member_list[idx][1]]))